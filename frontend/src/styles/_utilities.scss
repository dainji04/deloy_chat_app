// Utility classes for theming
@use "variables" as *;
@use "theme" as *;

// Theme-specific CSS custom properties
.light-theme {
  --primary-color: #{$light-primary-color};
  --text-primary: #{$light-text-primary};
  --text-secondary: #{$light-text-secondary};
  --text-muted: #{$light-text-muted};
  --bg-primary: #{$light-bg-primary};
  --bg-secondary: #{$light-bg-secondary};
  --bg-tertiary: #{$light-bg-tertiary};
  --border-color: #{$light-border};
  --accent-color: #{$light-accent};
  --success-color: #{$light-success};
  --warning-color: #{$light-warning};
  --error-color: #{$light-error};
  --box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.1);
  --overlay: #{$light-overlay};
}

.dark-theme {
  --primary-color: #{$dark-primary-color};
  --text-primary: #{$dark-text-primary};
  --text-secondary: #{$dark-text-secondary};
  --text-muted: #{$dark-text-muted};
  --bg-primary: #{$dark-bg-primary};
  --bg-secondary: #{$dark-bg-secondary};
  --bg-tertiary: #{$dark-bg-tertiary};
  --border-color: #{$dark-border};
  --accent-color: #{$dark-accent};
  --success-color: #{$dark-success};
  --warning-color: #{$dark-warning};
  --error-color: #{$dark-error};
  --box-shadow: 0px 0px 16px rgba(0, 0, 0, .3);
  --overlay: #{$dark-overlay};
}

.cursor {
  cursor: pointer;
}

.primary-btn {
  font-size: 16px;
  padding: 10px 25px;
  background-color: var(--primary-color);
  border-radius: 12px;
  color: #fff;
  border: none;
  cursor: pointer;

   // Disabled state - cần specificity cao hơn
  &:disabled,
  &[disabled] {
    background-color: darken($primary-color, 5%) !important;
    cursor: not-allowed !important;
    opacity: 0.6 !important;
  }

  &:hover {
    background-color: $primary-color;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  }
}

.avatar {
  object-fit: cover;
  border: 1px solid #ccc;
  border-radius: 50%;
  width: 50px;
  height: 50px;
  // overflow: hidden;
}

.dot {
  position: absolute;
  bottom: 0;
  right: 0;
  border: 3px solid #fff;
  border-radius: 50%;

  &.online {
    color: green;
  }
  &.offline {
    color: red;
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
    transform: translateY(-10px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

// Text colors
.text-primary {
  color: var(--text-primary);
}

.text-secondary {
  color: var(--text-secondary);
}

.text-muted {
  color: var(--text-muted);
}

// Background colors
.bg-primary {
  background-color: var(--bg-primary);
}

.bg-secondary {
  background-color: var(--bg-secondary);
}

.bg-tertiary {
  background-color: var(--bg-tertiary);
}

// Border colors
.border-color {
  border-color: var(--border-color);
}

// overlay for modals
.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--overlay);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 100;
}

// Alert/Message components
.alert {
  padding: 12px 16px;
  border-radius: 6px;
  border: 1px solid transparent;

  &.alert-success {
    background-color: rgba(40, 167, 69, 0.1);
    border-color: var(--success-color);
    color: var(--success-color);
  }

  &.alert-warning {
    color: var(--error-color);
  }

  &.alert-error {
    background-color: rgba(220, 53, 69, 0.1);
    border-color: var(--error-color);
    color: var(--error-color);
    margin-bottom: 10px;
  }

  &.alert-info {
    background-color: rgba(0, 122, 204, 0.1);
    border-color: var(--accent-color);
    color: var(--accent-color);
  }
}

// Loading spinner
.spinner {
  border: 2px solid var(--border-color);
  border-top: 2px solid var(--accent-color);
  border-radius: 50%;
  width: 20px;
  height: 20px;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
